// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.tencent.tars.testtars;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TestList {

	@TarsStructProperty(order = 0, isRequire = false)
	public String testStr = "";
	@TarsStructProperty(order = 1, isRequire = false)
	public java.util.List<String> strList = null;

	public String getTestStr() {
		return testStr;
	}

	public void setTestStr(String testStr) {
		this.testStr = testStr;
	}

	public java.util.List<String> getStrList() {
		return strList;
	}

	public void setStrList(java.util.List<String> strList) {
		this.strList = strList;
	}

	public TestList() {
	}

	public TestList(String testStr, java.util.List<String> strList) {
		this.testStr = testStr;
		this.strList = strList;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(testStr);
		result = prime * result + TarsUtil.hashCode(strList);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TestList)) {
			return false;
		}
		TestList other = (TestList) obj;
		return (
			TarsUtil.equals(testStr, other.testStr) &&
			TarsUtil.equals(strList, other.strList) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		if (null != testStr) {
			_os.write(testStr, 0);
		}
		if (null != strList) {
			_os.write(strList, 1);
		}
	}

	static java.util.List<String> cache_strList;
	static { 
		cache_strList = new java.util.ArrayList<String>();
		String var_1 = "";
		cache_strList.add(var_1);
	}

	public void readFrom(TarsInputStream _is) {
		this.testStr = _is.readString(0, false);
		this.strList = (java.util.List<String>) _is.read(cache_strList, 1, false);
	}

}
